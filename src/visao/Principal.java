package visao;

import DAO.TicketDAO;
import controle.FuncionarioControle;
import controle.TicketControle;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Funcionario;
import modelo.Ticket;

public final class Principal extends javax.swing.JFrame {

    boolean first;
    boolean alteracao;

    public Principal() {
        initComponents();
        jTextFieldIdTicket.requestFocus();
        carregaTabela(0, "  /  /    ", "  /  /    ");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jRadioButton1 = new javax.swing.JRadioButton();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonConfirma = new javax.swing.JButton();
        jTextFieldIdTicket = new javax.swing.JTextField();
        jTextFieldIdFuncionario = new javax.swing.JTextField();
        jTextFieldSituacao = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jLabelCPF = new javax.swing.JLabel();
        jLabelSituacao = new javax.swing.JLabel();
        jLabelUltAlteracao = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTextFieldQuantidade = new javax.swing.JFormattedTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabelDataEntrega = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTickets = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldIdFuncionarioRel = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabelNome2 = new javax.swing.JLabel();
        jLabelCPF2 = new javax.swing.JLabel();
        jLabelSituacao2 = new javax.swing.JLabel();
        jLabelUltAlteracao2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldTotalTickets = new javax.swing.JTextField();
        jFormattedTextFieldInicio = new javax.swing.JFormattedTextField();
        jFormattedTextFieldFim = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jMenuBarSuperior = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle de Tickets de Alimentação por Funcionario ");
        setResizable(false);

        jTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPaneStateChanged(evt);
            }
        });

        jLabel1.setText("ID Ticket: ");

        jLabel2.setText("ID Funcionario : ");

        jLabel3.setText("Quantidade : ");

        jLabel4.setText("Situacao  A/I : ");

        jButtonConfirma.setText("Cadastrar");
        jButtonConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmaActionPerformed(evt);
            }
        });

        jTextFieldIdTicket.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldIdTicketFocusLost(evt);
            }
        });

        jTextFieldIdFuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldIdFuncionarioFocusLost(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Funcionario"));

        jLabel7.setText("Nome : ");

        jLabel8.setText("CPF : ");

        jLabel9.setText("Situacao : ");

        jLabel10.setText("Ultima Alteracao : ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelUltAlteracao, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelCPF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelSituacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabelNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabelCPF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabelSituacao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabelUltAlteracao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        try {
            jTextFieldQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel5.setText("Data Entrega : ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(197, 197, 197))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextFieldIdTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel5))
                                                .addGap(47, 47, 47)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jTextFieldSituacao)
                                                    .addComponent(jTextFieldIdFuncionario)
                                                    .addComponent(jTextFieldQuantidade)
                                                    .addComponent(jLabelDataEntrega, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldIdTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldIdFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelDataEntrega, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonConfirma)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Tickets", jPanel1);

        jTableTickets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Ticket", "ID Funcionario", "Data Entrega", "Quantidade", "Situacao"
            }
        ));
        jScrollPane1.setViewportView(jTableTickets);

        jLabel6.setText("ID Funcionario : ");

        jTextFieldIdFuncionarioRel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldIdFuncionarioRelFocusLost(evt);
            }
        });

        jLabel11.setText("Periodo Inicio : ");

        jLabel12.setText("Periodo Fim : ");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Funcionario"));
        jPanel5.setOpaque(false);

        jLabel17.setText("Nome : ");

        jLabel18.setText("CPF : ");

        jLabel19.setText("Situacao : ");

        jLabel20.setText("Ultima Alteracao : ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelNome2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelUltAlteracao2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelCPF2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelSituacao2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabelNome2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabelCPF2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabelSituacao2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabelUltAlteracao2)))
        );

        jButton4.setText("Consultar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel13.setText("Total de Tickets Entregues : ");

        try {
            jFormattedTextFieldInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jFormattedTextFieldFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldIdFuncionarioRel)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                    .addComponent(jFormattedTextFieldInicio)
                                    .addComponent(jFormattedTextFieldFim))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldTotalTickets, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldIdFuncionarioRel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jFormattedTextFieldInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jFormattedTextFieldFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextFieldTotalTickets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane.addTab("Relatorio", jPanel2);

        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Menu");

        jMenuItem1.setText("Novo Funcionario");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBarSuperior.add(jMenu1);

        setJMenuBar(jMenuBarSuperior);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        CadFuncionario cadFuncionario = new CadFuncionario();
        cadFuncionario.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButtonConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmaActionPerformed
        boolean erro = false;
        TicketControle ticketControle = new TicketControle();
        if (jTextFieldIdTicket.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Id Ticket é obrigatorio.");
            jTextFieldIdTicket.requestFocus();
            erro = true;
        }
        if (jTextFieldIdFuncionario.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Id do Funcionario é obrigatorio.");
            jTextFieldIdFuncionario.requestFocus();
            erro = true;
        }
        if (!erro) {
            Ticket ticket = new Ticket();
            ticket.setId(Integer.valueOf(jTextFieldIdTicket.getText()));
            ticket.setIdFuncionario(Integer.valueOf(jTextFieldIdFuncionario.getText()));
            ticket.setQuantidade(Integer.valueOf(jTextFieldQuantidade.getText()));
            ticket.setSituacao(jTextFieldSituacao.getText());
            if (alteracao) {
                try {
                    ticketControle.Alterar(ticket);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                String data = formatter.format(new Date());
                ticket.setDataEntrega(data);
                if (first && jTextFieldSituacao.getText().equals("I")) {
                    JOptionPane.showMessageDialog(null, "Para novos cadastros é obrigatorio estar A - Ativo.");
                    jTextFieldSituacao.setText("");
                    jTextFieldSituacao.requestFocus();
                } else {

                    if (!ticketControle.Cadastrar(ticket)) {
                        JOptionPane.showMessageDialog(rootPane, "Cadastrado com sucesso.");
                        jTextFieldIdTicket.setText("");
                        jTextFieldIdFuncionario.setText("");
                        jTextFieldQuantidade.setText("");
                        jTextFieldSituacao.setText("");
                        jTextFieldIdTicket.requestFocus();
                    }
                }
            }
        }

    }//GEN-LAST:event_jButtonConfirmaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldIdTicketFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIdTicketFocusLost
        TicketControle ticketControle = new TicketControle();
        Ticket ticket = new Ticket();
        if (!jTextFieldIdTicket.getText().equals("")) {
            try {
                ticket = ticketControle.Consultar(Integer.parseInt(jTextFieldIdTicket.getText()));
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (ticket != null) {
                //dados do ticket
                alteracao = true;
                jTextFieldIdTicket.setText(ticket.getId().toString());
                jTextFieldIdFuncionario.setText(ticket.getIdFuncionario().toString());
                jTextFieldQuantidade.setText(ticket.getQuantidade().toString());
                jTextFieldSituacao.setText(ticket.getSituacao());
                jLabelDataEntrega.setText(ticket.getDataEntrega());
                //dados do funcionario
                FuncionarioControle funcionarioControle = new FuncionarioControle();
                Funcionario funcionario = new Funcionario();
                try {
                    funcionario = funcionarioControle.Consultar(Integer.parseInt(jTextFieldIdFuncionario.getText()));
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (funcionario != null) {
                    jLabelNome.setText(funcionario.getNome());
                    jLabelCPF.setText(funcionario.getCpf());
                    jLabelSituacao.setText(funcionario.getSituacao());
                    jLabelUltAlteracao.setText(funcionario.getAlteracao());
                }
                first = false;
            } else {
                // limpa tela
                jTextFieldIdFuncionario.setText("");
                jTextFieldQuantidade.setText("");
                jTextFieldSituacao.setText("");
                jLabelDataEntrega.setText("");

                jLabelNome.setText("");
                jLabelCPF.setText("");
                jLabelSituacao.setText("");
                jLabelUltAlteracao.setText("");
                //muda o flag para acecitar somente A no cadastro.
                alteracao = false;
                first = true;
            }
        }
    }//GEN-LAST:event_jTextFieldIdTicketFocusLost

    private void jTextFieldIdFuncionarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIdFuncionarioFocusLost
        FuncionarioControle funcionarioControle = new FuncionarioControle();
        Funcionario funcionario = new Funcionario();
        if (!jTextFieldIdFuncionario.getText().equals("")) {
            try {
                funcionario = funcionarioControle.Consultar(Integer.parseInt(jTextFieldIdFuncionario.getText()));
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (funcionario != null) {
                jLabelNome.setText(funcionario.getNome());
                jLabelCPF.setText(funcionario.getCpf());
                jLabelSituacao.setText(funcionario.getSituacao());
                jLabelUltAlteracao.setText(funcionario.getAlteracao());
            } else {
                jLabelNome.setText("");
                jLabelCPF.setText("");
                jLabelSituacao.setText("");
                jLabelUltAlteracao.setText("");

                JOptionPane.showMessageDialog(null, "Funcionario não cadastrado.");
                jTextFieldIdFuncionario.setText("");
                jTextFieldIdFuncionario.requestFocus();

            }
        }
    }//GEN-LAST:event_jTextFieldIdFuncionarioFocusLost

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        boolean erro = false;
        String data_fim = jFormattedTextFieldFim.getText();
        String data_inicio = jFormattedTextFieldInicio.getText();
        if (!data_fim.equals("  /  /    ") && !data_inicio.equals("  /  /    ")) {
            if (!isValid(data_inicio)) {
                erro = true;
                JOptionPane.showMessageDialog(null, "Data Inicial invalida.");
            }
            if (!isValid(data_fim)) {
                erro = true;
                JOptionPane.showMessageDialog(null, "Data Final invalida.");
            }
        }

        if (!data_inicio.equals("  /  /    ") && !data_fim.equals("  /  /    ")) {
            Date dataInicial = null, dataFinal = null;
            String strDataInicial = data_inicio;
            String strDataFinal = data_fim;

            SimpleDateFormat sdf1 = new SimpleDateFormat("dd/MM/yyyy");
            SimpleDateFormat sdf2 = new SimpleDateFormat("dd/MM/yyyy");

            try {
                dataFinal = sdf1.parse(strDataFinal);
            } catch (ParseException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Data final invalida.");
                erro = true;
            }
            try {
                dataInicial = sdf2.parse(strDataInicial);
            } catch (ParseException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                erro = true;
            }

            if ((dataInicial.after(dataFinal))) {
                JOptionPane.showMessageDialog(null, "ERRO : Data final deve ser maior que data inicial.");
                erro = true;
                jFormattedTextFieldInicio.requestFocus();
            }

        }

        int id;
        if (jTextFieldIdFuncionarioRel.getText().equals("")) {
            id = 0;
        } else {
            id = Integer.parseInt(jTextFieldIdFuncionarioRel.getText());
        }
        if (erro == false) {
            carregaTabela(id, data_inicio, data_fim);
        }
        //OKconsulta por cliente total
        //        consulta por cluiente por data
        //                consulta total por data
        //OK                        consulta toral por total

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextFieldIdFuncionarioRelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIdFuncionarioRelFocusLost
        FuncionarioControle funcionarioControle = new FuncionarioControle();
        Funcionario funcionario = new Funcionario();

        int id;
        if (jTextFieldIdFuncionarioRel.getText().equals("")) {
            id = 0;
        } else {
            id = Integer.parseInt(jTextFieldIdFuncionarioRel.getText());
        }
        if (id != 0) {
            try {
                funcionario = funcionarioControle.Consultar(id);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (funcionario != null) {
                jLabelNome2.setText(funcionario.getNome());
                jLabelCPF2.setText(funcionario.getCpf());
                jLabelSituacao2.setText(funcionario.getSituacao());
                jLabelUltAlteracao2.setText(funcionario.getAlteracao());
            } else {
                JOptionPane.showMessageDialog(null, "Funcionario com ID :" + id + " não encontrado.");
                jTextFieldIdFuncionarioRel.setText("");
                jTextFieldIdFuncionarioRel.requestFocus();
            }

        } else {
            jLabelNome2.setText("Todos os Funcionarios");
            jLabelCPF2.setText("");
            jLabelSituacao2.setText("");
            jLabelUltAlteracao2.setText("");
        }


    }//GEN-LAST:event_jTextFieldIdFuncionarioRelFocusLost

    private void jTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPaneStateChanged
        carregaTabela(0, "  /  /    ", "  /  /    ");
        jTextFieldIdFuncionarioRel.setText("");
        jTextFieldIdFuncionarioRel.requestFocus();
        jFormattedTextFieldInicio.setText("");
        jFormattedTextFieldFim.setText("");
        jLabelNome2.setText("");
        jLabelCPF2.setText("");
        jLabelSituacao2.setText("");
        jLabelUltAlteracao2.setText("");

    }//GEN-LAST:event_jTabbedPaneStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonConfirma;
    private javax.swing.JFormattedTextField jFormattedTextFieldFim;
    private javax.swing.JFormattedTextField jFormattedTextFieldInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCPF;
    private javax.swing.JLabel jLabelCPF2;
    private javax.swing.JLabel jLabelDataEntrega;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelNome2;
    private javax.swing.JLabel jLabelSituacao;
    private javax.swing.JLabel jLabelSituacao2;
    private javax.swing.JLabel jLabelUltAlteracao;
    private javax.swing.JLabel jLabelUltAlteracao2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBarSuperior;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTable jTableTickets;
    private javax.swing.JTextField jTextFieldIdFuncionario;
    private javax.swing.JTextField jTextFieldIdFuncionarioRel;
    private javax.swing.JTextField jTextFieldIdTicket;
    private javax.swing.JFormattedTextField jTextFieldQuantidade;
    private javax.swing.JTextField jTextFieldSituacao;
    private javax.swing.JTextField jTextFieldTotalTickets;
    // End of variables declaration//GEN-END:variables

    public void carregaTabela(int id_funcionario, String data_inicio, String data_fim) {
        DefaultTableModel model = (DefaultTableModel) jTableTickets.getModel();
        ArrayList<Ticket> listaTickets = new ArrayList();
        TicketDAO ticketDAO = new TicketDAO();
        while (jTableTickets.getRowCount() > 0) {
            model.removeRow(0);
        }

        //CONSULTA GERAL PADRAO
        if (id_funcionario == 0 && data_inicio.equals("  /  /    ") && data_fim.equals("  /  /    ")) {
            try {
                listaTickets = ticketDAO.todosTickets();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        //CONSULTA FUNCIONARIO GERAL
        if (id_funcionario != 0 && data_inicio.equals("  /  /    ") && data_fim.equals("  /  /    ")) {
            try {
                listaTickets = ticketDAO.todosTicketsPorFuncionario(id_funcionario);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        //CONSULTA FUNCIONARIO POR PERIODO

        if (id_funcionario != 0 && !data_inicio.equals("  /  /    ") && !data_fim.equals("  /  /    ")) {
            //Transformando Strings em datas
            Date dataInicial = null, dataFinal = null;
            String strDataInicial = data_inicio;
            String strDataFinal = data_fim;
            SimpleDateFormat sdf1 = new SimpleDateFormat("dd/MM/yyyy");
            try {
                dataFinal = sdf1.parse(strDataFinal);

            } catch (ParseException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                dataInicial = sdf1.parse(strDataInicial);
            } catch (ParseException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            //Fim
            //crio o arraylist

            //alimento o arraylist com a consulta
            try {
                listaTickets = ticketDAO.todosTicketsPorFuncionario(id_funcionario);

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            ArrayList<Ticket> novaLista = new ArrayList<Ticket>();
            for (Ticket e : listaTickets) {
                Date dataEntregaFinal = null;
                SimpleDateFormat sdf3 = new SimpleDateFormat("dd/MM/yyyy");
                String dataCortada = e.getDataEntrega().substring(0, 10);
                try {

                    dataEntregaFinal = sdf3.parse(dataCortada);
                } catch (ParseException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                if ((dataEntregaFinal.equals(dataInicial)) || (dataEntregaFinal.equals(dataFinal)) || (dataEntregaFinal.after(dataInicial)) && dataEntregaFinal.before(dataFinal)) {
                    novaLista.add(e);
                }
            }
            if (!novaLista.isEmpty()) {
                listaTickets.clear();
                listaTickets = novaLista;
            } else {
                listaTickets = null;
            }

        }
        //CONSULTA PERIODO TODOS OS FUNCIONARIOS
        if (id_funcionario == 0 && !data_inicio.equals("  /  /    ") && !data_fim.equals("  /  /    ")) {
            //Transformando Strings em datas
            Date dataInicial = null, dataFinal = null;
            String strDataInicial = data_inicio;
            String strDataFinal = data_fim;
            SimpleDateFormat sdf1 = new SimpleDateFormat("dd/MM/yyyy");
            try {
                dataFinal = sdf1.parse(strDataFinal);

            } catch (ParseException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                dataInicial = sdf1.parse(strDataInicial);
            } catch (ParseException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            //Fim
            //crio o arraylist

            //alimento o arraylist com a consulta
            try {
                listaTickets = ticketDAO.todosTickets();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            ArrayList<Ticket> novaLista = new ArrayList<Ticket>();
            for (Ticket e : listaTickets) {
                Date dataEntregaFinal = null;
                SimpleDateFormat sdf3 = new SimpleDateFormat("dd/MM/yyyy");
                String dataCortada = e.getDataEntrega().substring(0, 10);
                try {

                    dataEntregaFinal = sdf3.parse(dataCortada);
                } catch (ParseException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                if ((dataEntregaFinal.equals(dataInicial)) || (dataEntregaFinal.equals(dataFinal)) || (dataEntregaFinal.after(dataInicial)) && dataEntregaFinal.before(dataFinal)) {
                    novaLista.add(e);
                }
            }
            if (!novaLista.isEmpty()) {
                listaTickets.clear();
                listaTickets = novaLista;
            } else {
                listaTickets = null;
            }
        }
        if (listaTickets == null || listaTickets.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nenhum registro encontrado.");
        } else {
            int contador = 0;
            for (Ticket e : listaTickets) {
                contador = contador + e.getQuantidade();
                model.addRow(new Object[]{e.getId(), e.getIdFuncionario(), e.getDataEntrega(), e.getQuantidade(), e.getSituacao()});
            }
            jTextFieldTotalTickets.setText(Integer.toString(contador));
        }

    }

    public boolean isValid(String date) {
        try {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate d = LocalDate.parse(date, formatter);
            return true;
        } catch (DateTimeParseException e) {
            return false;
        }
    }
}
